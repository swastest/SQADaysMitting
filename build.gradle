plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}
def junitVersion = "5.8.2"
def slfVersion = "1.7.36"
def fakerVersion = "1.0.2"
def jacksonVersion = "2.9.5"
def allureVersion = "2.17.3",
        aspectjweaverVersion = "1.9.6"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "org.slf4j:slf4j-simple:$slfVersion",
            "io.rest-assured:rest-assured:4.5.1",
            'org.projectlombok:lombok:1.18.10',
            'com.googlecode.json-simple:json-simple:1.1.1',
            'io.cucumber:cucumber-java:7.8.0',
            'io.cucumber:cucumber-junit:7.8.0',
            'com.codeborne:selenide:6.9.0',
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
    )
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}